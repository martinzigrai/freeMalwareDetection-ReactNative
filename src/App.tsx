import * as React from 'react';

import {Platform} from 'react-native';
import {
  addToWhitelist,
  useFreeRasp,
  type SuspiciousAppInfo,
} from 'freerasp-react-native';
import {DemoApp} from './DemoApp';
import {useEffect} from 'react';
import {config} from './malwareDetection.config';

const App = () => {
  const [suspiciousApps, setSuspiciousApps] = React.useState<
    SuspiciousAppInfo[]
  >([]);

  useEffect(() => {
    (async () => {
      Platform.OS === 'android' && (await addItemsToMalwareWhitelist());
    })();
  }, []);

  const actions = {
    // Android only
    malware: (detectedApps: SuspiciousAppInfo[]) => {
      setSuspiciousApps(detectedApps);
    },
  };

  const addItemsToMalwareWhitelist = async () => {
    const appsToWhitelist = [
      'com.talsecreactnativesecuritypluginexample',
      'com.example.myApp',
    ];
    await Promise.all(
      appsToWhitelist.map(async app => {
        try {
          const whitelistResponse = await addToWhitelist(app);
          console.info(
            `${app} stored to Malware Whitelist: ${whitelistResponse}`,
          );
        } catch (error) {
          console.info('Malware whitelist failed: ', error);
        }
      }),
    );
  };

  useFreeRasp(config, actions);

  return <DemoApp suspiciousApps={suspiciousApps} />;
};

export default App;
